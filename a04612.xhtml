<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Super4PCS Library: GlobalRegistration::IndexedNormalSet&lt; Point, dim, _ngSize, _Scalar &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSsymbols.js", "TeX/AMSmath.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Super4PCS Library
   &#160;<span id="projectnumber">V1.1.2(996102d)</span>
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a04612.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="a04609.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">GlobalRegistration::IndexedNormalSet&lt; Point, dim, _ngSize, _Scalar &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Normal set indexed by a position in euclidean space.  
 <a href="a04612.xhtml#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for GlobalRegistration::IndexedNormalSet&lt; Point, dim, _ngSize, _Scalar &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a04610.svg" width="170" height="220"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a6feb9150a25dd307876a89c61ecc1de7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#a6feb9150a25dd307876a89c61ecc1de7">MOVE_DIR</a> { <a class="el" href="a04612.xhtml#a6feb9150a25dd307876a89c61ecc1de7ad4c702caaaf54be52033d06601118647">POSITIVE</a>, 
<a class="el" href="a04612.xhtml#a6feb9150a25dd307876a89c61ecc1de7a6193cb0f5ab5ae1c5776b505b127ff24">NEGATIVE</a>
 }</td></tr>
<tr class="separator:a6feb9150a25dd307876a89c61ecc1de7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98674507924c19af858138c91751258e"><td class="memItemLeft" align="right" valign="top">typedef std::array&lt; std::vector&lt; unsigned int &gt;, <a class="el" href="a04030.xhtml#a76ba87a33277e2c0cb66bbf1dbb3f4c7">Utils::POW</a>(_ngSize, dim)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#a98674507924c19af858138c91751258e">AngularGrid</a></td></tr>
<tr class="separator:a98674507924c19af858138c91751258e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff1b4bdbebc93586a9660b342957e14a"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> = _Scalar</td></tr>
<tr class="separator:aff1b4bdbebc93586a9660b342957e14a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad4b76b6dbb64936dd2e494a82c763084"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#ad4b76b6dbb64936dd2e494a82c763084">IndexedNormalSet</a> (const <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> epsilon)</td></tr>
<tr class="separator:ad4b76b6dbb64936dd2e494a82c763084"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0310363e5192d196e78c4b7bbcce261"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#ad0310363e5192d196e78c4b7bbcce261">~IndexedNormalSet</a> ()</td></tr>
<tr class="separator:ad0310363e5192d196e78c4b7bbcce261"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33214ce57b59b9a16c5ac6bca7145c54"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#a33214ce57b59b9a16c5ac6bca7145c54">addElement</a> (const Point &amp;pos, const Point &amp;normal, unsigned int id)</td></tr>
<tr class="memdesc:a33214ce57b59b9a16c5ac6bca7145c54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a new couple pos/normal, and its associated id.  <a href="#a33214ce57b59b9a16c5ac6bca7145c54">More...</a><br /></td></tr>
<tr class="separator:a33214ce57b59b9a16c5ac6bca7145c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa038507aec3b89c079e9a10b1063c717"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04612.xhtml#a98674507924c19af858138c91751258e">AngularGrid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#aa038507aec3b89c079e9a10b1063c717">angularGrid</a> (const Point &amp;p)</td></tr>
<tr class="separator:aa038507aec3b89c079e9a10b1063c717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63eba7afc1b198dccc938aeabe0b398e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#a63eba7afc1b198dccc938aeabe0b398e">getNeighbors</a> (const Point &amp;p, std::vector&lt; unsigned int &gt; &amp;nei)</td></tr>
<tr class="memdesc:a63eba7afc1b198dccc938aeabe0b398e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get closest points in euclidean space.  <a href="#a63eba7afc1b198dccc938aeabe0b398e">More...</a><br /></td></tr>
<tr class="separator:a63eba7afc1b198dccc938aeabe0b398e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a31142d4f9c8119efe0c24b94190dc5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#a2a31142d4f9c8119efe0c24b94190dc5">getNeighbors</a> (const Point &amp;p, const Point &amp;n, std::vector&lt; unsigned int &gt; &amp;nei)</td></tr>
<tr class="memdesc:a2a31142d4f9c8119efe0c24b94190dc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get closest points in euclidean an normal space.  <a href="#a2a31142d4f9c8119efe0c24b94190dc5">More...</a><br /></td></tr>
<tr class="separator:a2a31142d4f9c8119efe0c24b94190dc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e7236e9422f472f14bb310ddc62f87f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04612.xhtml#a6e7236e9422f472f14bb310ddc62f87f">getNeighbors</a> (const Point &amp;p, const Point &amp;n, <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> alpha, std::vector&lt; unsigned int &gt; &amp;nei, bool tryReverse=false)</td></tr>
<tr class="memdesc:a6e7236e9422f472f14bb310ddc62f87f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get closest poitns in euclidean an normal space with angular deviation.  <a href="#a6e7236e9422f472f14bb310ddc62f87f">More...</a><br /></td></tr>
<tr class="separator:a6e7236e9422f472f14bb310ddc62f87f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class Point, int dim, int _ngSize, typename _Scalar&gt;<br />
struct GlobalRegistration::IndexedNormalSet&lt; Point, dim, _ngSize, _Scalar &gt;</h3>

<p>Normal set indexed by a position in euclidean space. </p>
<p>The size used to hash euclidean coordinates is defined at runtime. The size used to hash the normals in an euclidean cell is defined at compile time</p>
<p>Loops over dimensions used to compute index values are unrolled at compile time. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a98674507924c19af858138c91751258e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98674507924c19af858138c91751258e">&#9670;&nbsp;</a></span>AngularGrid</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename _Scalar &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::array&lt; std::vector&lt;unsigned int&gt;, <a class="el" href="a04030.xhtml#a76ba87a33277e2c0cb66bbf1dbb3f4c7">Utils::POW</a>(_ngSize, dim)&gt; <a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, _Scalar &gt;::<a class="el" href="a04612.xhtml#a98674507924c19af858138c91751258e">AngularGrid</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aff1b4bdbebc93586a9660b342957e14a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff1b4bdbebc93586a9660b342957e14a">&#9670;&nbsp;</a></span>Scalar</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename _Scalar &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, _Scalar &gt;::<a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> =  _Scalar</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a6feb9150a25dd307876a89c61ecc1de7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6feb9150a25dd307876a89c61ecc1de7">&#9670;&nbsp;</a></span>MOVE_DIR</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename _Scalar &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a04612.xhtml#a6feb9150a25dd307876a89c61ecc1de7">GlobalRegistration::IndexedNormalSet::MOVE_DIR</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a6feb9150a25dd307876a89c61ecc1de7ad4c702caaaf54be52033d06601118647"></a>POSITIVE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a6feb9150a25dd307876a89c61ecc1de7a6193cb0f5ab5ae1c5776b505b127ff24"></a>NEGATIVE&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad4b76b6dbb64936dd2e494a82c763084"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4b76b6dbb64936dd2e494a82c763084">&#9670;&nbsp;</a></span>IndexedNormalSet()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename _Scalar &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, _Scalar &gt;::<a class="el" href="a04612.xhtml">IndexedNormalSet</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a>&#160;</td>
          <td class="paramname"><em>epsilon</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>We need to check if epsilon is a power of two and correct it if needed </p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a04612_ad4b76b6dbb64936dd2e494a82c763084_cgraph.svg" width="352" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad0310363e5192d196e78c4b7bbcce261"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0310363e5192d196e78c4b7bbcce261">&#9670;&nbsp;</a></span>~IndexedNormalSet()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename Scalar &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> &gt;::~<a class="el" href="a04612.xhtml">IndexedNormalSet</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a33214ce57b59b9a16c5ac6bca7145c54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33214ce57b59b9a16c5ac6bca7145c54">&#9670;&nbsp;</a></span>addElement()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename Scalar &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> &gt;::addElement </td>
          <td>(</td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>normal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a new couple pos/normal, and its associated id. </p>

</div>
</div>
<a id="aa038507aec3b89c079e9a10b1063c717"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa038507aec3b89c079e9a10b1063c717">&#9670;&nbsp;</a></span>angularGrid()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename _Scalar &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04612.xhtml#a98674507924c19af858138c91751258e">AngularGrid</a>* <a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, _Scalar &gt;::angularGrid </td>
          <td>(</td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>NULL if the grid does not exist or p is out of bound </dd></dl>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="a04612_aa038507aec3b89c079e9a10b1063c717_cgraph.svg" width="352" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a63eba7afc1b198dccc938aeabe0b398e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63eba7afc1b198dccc938aeabe0b398e">&#9670;&nbsp;</a></span>getNeighbors() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename Scalar &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> &gt;::getNeighbors </td>
          <td>(</td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; unsigned int &gt; &amp;&#160;</td>
          <td class="paramname"><em>nei</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get closest points in euclidean space. </p>

</div>
</div>
<a id="a2a31142d4f9c8119efe0c24b94190dc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a31142d4f9c8119efe0c24b94190dc5">&#9670;&nbsp;</a></span>getNeighbors() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename Scalar &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> &gt;::getNeighbors </td>
          <td>(</td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; unsigned int &gt; &amp;&#160;</td>
          <td class="paramname"><em>nei</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get closest points in euclidean an normal space. </p>

</div>
</div>
<a id="a6e7236e9422f472f14bb310ddc62f87f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e7236e9422f472f14bb310ddc62f87f">&#9670;&nbsp;</a></span>getNeighbors() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Point , int dim, int _ngSize, typename Scalar &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04612.xhtml">GlobalRegistration::IndexedNormalSet</a>&lt; Point, dim, _ngSize, <a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a> &gt;::getNeighbors </td>
          <td>(</td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Point &amp;&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a04612.xhtml#aff1b4bdbebc93586a9660b342957e14a">Scalar</a>&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; unsigned int &gt; &amp;&#160;</td>
          <td class="paramname"><em>nei</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>tryReverse</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get closest poitns in euclidean an normal space with angular deviation. </p>
<p>Do the rendering independently of the content </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a04027.xhtml">GlobalRegistration</a></li><li class="navelem"><a class="el" href="a04612.xhtml">IndexedNormalSet</a></li>
    <li class="footer">Generated on Tue Sep 19 2017 10:16:06 for Super4PCS Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
