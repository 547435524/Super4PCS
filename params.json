{
  "name": "Super4pcs",
  "tagline": "Fast Global Pointcloud Registration via Smart Indexing",
  "body": "Super4PCS\r\n=========\r\n\r\nCopyright 2014 Nicolas Mellado\r\n\r\nAuthors: Nicolas Mellado, Dror Aiger\r\n\r\n\r\n##Overview\r\nAn implementation of the Super 4-points Congruent Sets (Super 4PCS) \r\nalgorithm presented in:\r\n\r\n>Super 4PCS: Fast Global Pointcloud Registration via Smart Indexing\r\n>Nicolas Mellado, Dror Aiger, Niloy J. Mitra\r\n>Symposium on Geometry Processing 2014.\r\n\r\nData acquisition in large-scale scenes regularly involves accumulating information across multiple scans. A common approach is to locally align scan pairs using Iterative Closest Point (ICP) algorithm (or its variants), but requires static scenes and small motion between scan pairs. This prevents accumulating data across multiple scan sessions and/or different acquisition modalities (e.g., stereo, depth scans). Alternatively, one can use a global registration algorithm allowing scans to be in arbitrary initial poses. The state-of-the-art global registration algorithm, 4PCS, however has a quadratic time complexity in the number of data points. This vastly limits its applicability to acquisition of large environments. We present Super 4PCS for global pointcloud registration that is optimal, i.e., runs in linear time (in \r\nthe number of data points) and is also output sensitive in the complexity of the alignment problem based on the (unknown) overlap across scan pairs. Technically, we map the algorithm as an ‘instance problem’ and solve it efficiently using a smart indexing data organization. The algorithm is simple, memory-efficient, and fast. We demonstrate that Super 4PCS results in significant speedup over alternative approaches and allows unstructured efficient acquisition of scenes at scales previously not possible. Complete source code and datasets are available for research use at http://geometry.cs.ucl.ac.uk/projects/2014/super4PCS/.\r\n\r\n##Development state\r\nI am currently working on the source code to clean it and define a stable API. More interesting updates will come soon !\r\n\r\n###Test\r\nTests are currently under active development (see [CDash](http://my.cdash.org/index.php?project=Super4PCS)). More tests will be added soon.\r\n\r\nTo submit the result of the test from your computer, go into your `build` directory, and run `ctest -D Experimental`. \r\n\r\nTests currently available:\r\n* pair_extraction: generate random point clouds in 2, 3 and 4D, and query the pair generation structure with various radius.\r\n* matching: test the whole Super4PCS pipeline by registering range maps of the standford repository. You need an internet connection to build this test, since the datasets are downloaded at this time.\r\n\r\n\r\n##Compilation\r\n###Dependencies:\r\n* [Eigen](http://eigen.tuxfamily.org/)\r\n* [LibANN](http://www.cs.umd.edu/~mount/ANN/)\r\n* [OpenCV](http://opencv.org/)\r\n* [CFITSIO](http://heasarc.gsfc.nasa.gov/fitsio/fitsio.html), a dependency of chealpix. Both ubuntu and debian provide a virtual package 'cfitsio-dev'.\r\n\r\nSuper4PCS also requires [Chealpix](http://healpix.jpl.nasa.gov/html/csubnode4.htm), but we included it in the source tree to ease the installation procedure.\r\n\r\n\r\n###Compiling\r\nThe simplest solution is to use cmake, from the source directory:\r\n```\r\nmkdir build\r\ncd build\r\ncmake -DANN_DIR=/your/path/to/ann_1.1.2/ ..\r\n```\r\nNote: For now Super4PCS has been tested on Linux plateforms (Ubuntu, Debian).\r\n\r\nChealpix sources are now part of the Super4PCS repository and are compiled automatically.\r\nHowever, ANN doesn't come with a cmake package, so you need to set its path by hand (this will be fixed later).\r\n\r\n###Compilation error\r\nYou may encounter compilation issues when compiling with old versions of Eigen and C++11:\r\n```\r\n/somePath/eigen3/Eigen/src/Core/util/Macros.h:252:35: error: unable to find string literal operator ‘operator\"\"X’\r\n #define EIGEN_ASM_COMMENT(X)  asm(\"#\"X)\r\n                                    ^\r\n/somePath/eigen3/Eigen/src/Core/products/GeneralBlockPanelKernel.h:604:1: note: in expansion of macro ‘EIGEN_ASM_COMMENT’\r\n EIGEN_ASM_COMMENT(\"mybegin2\");\r\n ^\r\n```\r\nYou can easily fix it by:\r\n* update and use an up-to-date version of [Eigen](http://eigen.tuxfamily.org/). You may need to call\r\n```\r\ncmake -DEIGEN3_INCLUDE_DIR=/your/path/to/eigen/ ..\r\n```\r\n* Not recommended: modify one line in Eigen sources (Instructions [here](https://sourceforge.net/p/pagmo/mailman/message/30074799/)).\r\n\r\n\r\n##Usage\r\nA good starting point is to call the enclosed script `./run-example.sh`.\r\n\r\nMore details about parameter setting will be added soon. In the meantime please contact us to get support on parameter tuning (see section below).\r\n\r\n\r\n##Contact\r\nPlease feel free to contact us if you have any question regarding this source code (see the [project page](http://geometry.cs.ucl.ac.uk/projects/2014/super4PCS/) for contact information).\r\n\r\n",
  "google": "UA-78253737-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}