<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Super4PCS Library: GlobalRegistration::PairCreationFunctor&lt; _Scalar &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSsymbols.js", "TeX/AMSmath.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Super4PCS Library
   &#160;<span id="projectnumber">V1.1.2(996102d)</span>
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a04656.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="a04653.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">GlobalRegistration::PairCreationFunctor&lt; _Scalar &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for GlobalRegistration::PairCreationFunctor&lt; _Scalar &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a04655.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for GlobalRegistration::PairCreationFunctor&lt; _Scalar &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="a04654.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a0db25f251ac9d4e290ebeb96ad7a12ee"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> = _Scalar</td></tr>
<tr class="separator:a0db25f251ac9d4e290ebeb96ad7a12ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79545f4f997d8e49798c3ff928603012"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a79545f4f997d8e49798c3ff928603012">PairsVector</a> = std::vector&lt; std::pair&lt; int, int &gt; &gt;</td></tr>
<tr class="separator:a79545f4f997d8e49798c3ff928603012"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34d9a3720a86bbbd6d0c0df664c78537"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a34d9a3720a86bbbd6d0c0df664c78537">VectorType</a> = typename <a class="el" href="a04680.xhtml#a6dc8c7d110e5f0ccf1098b75702e8d83">Point3D::VectorType</a></td></tr>
<tr class="separator:a34d9a3720a86bbbd6d0c0df664c78537"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4a428d0df3a7227c3600dce6d541b09"><td class="memItemLeft" align="right" valign="top">typedef Eigen::Matrix&lt; <a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>, 3, 1 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">Point</a></td></tr>
<tr class="memdesc:ac4a428d0df3a7227c3600dce6d541b09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal data.  <a href="#ac4a428d0df3a7227c3600dce6d541b09">More...</a><br /></td></tr>
<tr class="separator:ac4a428d0df3a7227c3600dce6d541b09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea0f143b875c30d3f3aa927b3849df1b"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="a04632.xhtml">Accelerators::PairExtraction::HyperSphere</a>&lt; typename <a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">PairCreationFunctor::Point</a>, 3, <a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#aea0f143b875c30d3f3aa927b3849df1b">Primitive</a></td></tr>
<tr class="separator:aea0f143b875c30d3f3aa927b3849df1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7333de863bb29ecccfb3f027c06a2030"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a7333de863bb29ecccfb3f027c06a2030">PairCreationFunctor</a> (<a class="el" href="a04688.xhtml">Match4PCSOptions</a> options, const std::vector&lt; <a class="el" href="a04680.xhtml">Point3D</a> &gt; &amp;Q)</td></tr>
<tr class="separator:a7333de863bb29ecccfb3f027c06a2030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cd266ca41bee2a8b8256c892bb0ed79"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">Point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a7cd266ca41bee2a8b8256c892bb0ed79">unitToWorld</a> (const Eigen::MatrixBase&lt; typename <a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">PairCreationFunctor::Point</a> &gt; &amp;p) const</td></tr>
<tr class="separator:a7cd266ca41bee2a8b8256c892bb0ed79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af48eb689681a72289e71f574ffbbda30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#af48eb689681a72289e71f574ffbbda30">unitToWorld</a> (<a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> d) const</td></tr>
<tr class="separator:af48eb689681a72289e71f574ffbbda30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e8d8d1f0745e260c68f71602d13cef4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">Point</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a6e8d8d1f0745e260c68f71602d13cef4">getPointInWorldCoord</a> (int i) const</td></tr>
<tr class="separator:a6e8d8d1f0745e260c68f71602d13cef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49e343e3311777982f046e951a0468ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a49e343e3311777982f046e951a0468ed">synch3DContent</a> ()</td></tr>
<tr class="separator:a49e343e3311777982f046e951a0468ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a298bea21308326899fccb7ad3bca9257"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a298bea21308326899fccb7ad3bca9257">setRadius</a> (<a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> radius)</td></tr>
<tr class="separator:a298bea21308326899fccb7ad3bca9257"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af672b4e105893166dace675ef3647245"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#af672b4e105893166dace675ef3647245">getNormalizedEpsilon</a> (<a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> eps)</td></tr>
<tr class="separator:af672b4e105893166dace675ef3647245"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2c82be20c90ad3b6c0fcd550788b4d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#aa2c82be20c90ad3b6c0fcd550788b4d7">setBase</a> (int base_point1, int base_point2, const std::vector&lt; <a class="el" href="a04680.xhtml">Point3D</a> &gt; &amp;base_3D)</td></tr>
<tr class="separator:aa2c82be20c90ad3b6c0fcd550788b4d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae760cbb4be13eee8761198d8f87f7e6f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#ae760cbb4be13eee8761198d8f87f7e6f">beginPrimitiveCollect</a> (int)</td></tr>
<tr class="separator:ae760cbb4be13eee8761198d8f87f7e6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23e603aec920b346f7f0be32ee7f8037"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a23e603aec920b346f7f0be32ee7f8037">endPrimitiveCollect</a> (int)</td></tr>
<tr class="separator:a23e603aec920b346f7f0be32ee7f8037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60aff792d3d3d3495fcb520b67300e7a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a60aff792d3d3d3495fcb520b67300e7a">process</a> (int i, int j)</td></tr>
<tr class="memdesc:a60aff792d3d3d3495fcb520b67300e7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">FIXME Pair filtering is the same than 4pcs. Need refactoring.  <a href="#a60aff792d3d3d3495fcb520b67300e7a">More...</a><br /></td></tr>
<tr class="separator:a60aff792d3d3d3495fcb520b67300e7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aafb5a2cee6e848fe85e759d4bb9fa60f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#aafb5a2cee6e848fe85e759d4bb9fa60f">norm_threshold</a></td></tr>
<tr class="memdesc:aafb5a2cee6e848fe85e759d4bb9fa60f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processing data.  <a href="#aafb5a2cee6e848fe85e759d4bb9fa60f">More...</a><br /></td></tr>
<tr class="separator:aafb5a2cee6e848fe85e759d4bb9fa60f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04ee38e11f9bf4b5835355224b0c71e0"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a04ee38e11f9bf4b5835355224b0c71e0">pair_normals_angle</a></td></tr>
<tr class="separator:a04ee38e11f9bf4b5835355224b0c71e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71d1504f5173fe021a1e0ebde7448fe6"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a71d1504f5173fe021a1e0ebde7448fe6">pair_distance</a></td></tr>
<tr class="separator:a71d1504f5173fe021a1e0ebde7448fe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39fb0763f1867030bfbe0d59b46bed74"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a39fb0763f1867030bfbe0d59b46bed74">pair_distance_epsilon</a></td></tr>
<tr class="separator:a39fb0763f1867030bfbe0d59b46bed74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac461661d32d3ad705df37a8fab0c9981"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04688.xhtml">Match4PCSOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#ac461661d32d3ad705df37a8fab0c9981">options_</a></td></tr>
<tr class="memdesc:ac461661d32d3ad705df37a8fab0c9981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shared data.  <a href="#ac461661d32d3ad705df37a8fab0c9981">More...</a><br /></td></tr>
<tr class="separator:ac461661d32d3ad705df37a8fab0c9981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35bed28fff4ed3df6f2a358454dd86fc"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="a04680.xhtml">Point3D</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a35bed28fff4ed3df6f2a358454dd86fc">Q_</a></td></tr>
<tr class="separator:a35bed28fff4ed3df6f2a358454dd86fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0be8b234a197b45eee821b1591fd5266"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a04656.xhtml#a79545f4f997d8e49798c3ff928603012">PairsVector</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a0be8b234a197b45eee821b1591fd5266">pairs</a></td></tr>
<tr class="separator:a0be8b234a197b45eee821b1591fd5266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b64a1c4f9e8e7f3bc76712a9b8934f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#ab7b64a1c4f9e8e7f3bc76712a9b8934f">ids</a></td></tr>
<tr class="separator:ab7b64a1c4f9e8e7f3bc76712a9b8934f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec4269266c4a42473bbe03aae3008fc8"><td class="memItemLeft" align="right" valign="top">std::vector&lt; typename <a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">PairCreationFunctor::Point</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#aec4269266c4a42473bbe03aae3008fc8">points</a></td></tr>
<tr class="separator:aec4269266c4a42473bbe03aae3008fc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a104e08c3e3a9131519b890227fd8fc9e"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="a04656.xhtml#aea0f143b875c30d3f3aa927b3849df1b">Primitive</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a04656.xhtml#a104e08c3e3a9131519b890227fd8fc9e">primitives</a></td></tr>
<tr class="separator:a104e08c3e3a9131519b890227fd8fc9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a79545f4f997d8e49798c3ff928603012"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79545f4f997d8e49798c3ff928603012">&#9670;&nbsp;</a></span>PairsVector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::<a class="el" href="a04656.xhtml#a79545f4f997d8e49798c3ff928603012">PairsVector</a> =  std::vector&lt;std::pair&lt;int, int&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac4a428d0df3a7227c3600dce6d541b09"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4a428d0df3a7227c3600dce6d541b09">&#9670;&nbsp;</a></span>Point</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef Eigen::Matrix&lt;<a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>, 3, 1&gt; <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::<a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">Point</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Internal data. </p>

</div>
</div>
<a id="aea0f143b875c30d3f3aa927b3849df1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea0f143b875c30d3f3aa927b3849df1b">&#9670;&nbsp;</a></span>Primitive</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="a04632.xhtml">Accelerators::PairExtraction::HyperSphere</a>&lt; typename <a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">PairCreationFunctor::Point</a>, 3, <a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>&gt; <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::<a class="el" href="a04656.xhtml#aea0f143b875c30d3f3aa927b3849df1b">Primitive</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0db25f251ac9d4e290ebeb96ad7a12ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0db25f251ac9d4e290ebeb96ad7a12ee">&#9670;&nbsp;</a></span>Scalar</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::<a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> =  _Scalar</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a34d9a3720a86bbbd6d0c0df664c78537"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34d9a3720a86bbbd6d0c0df664c78537">&#9670;&nbsp;</a></span>VectorType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::<a class="el" href="a04656.xhtml#a34d9a3720a86bbbd6d0c0df664c78537">VectorType</a> =  typename <a class="el" href="a04680.xhtml#a6dc8c7d110e5f0ccf1098b75702e8d83">Point3D::VectorType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7333de863bb29ecccfb3f027c06a2030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7333de863bb29ecccfb3f027c06a2030">&#9670;&nbsp;</a></span>PairCreationFunctor()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::<a class="el" href="a04656.xhtml">PairCreationFunctor</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a04688.xhtml">Match4PCSOptions</a>&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="a04680.xhtml">Point3D</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>Q</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae760cbb4be13eee8761198d8f87f7e6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae760cbb4be13eee8761198d8f87f7e6f">&#9670;&nbsp;</a></span>beginPrimitiveCollect()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::beginPrimitiveCollect </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a23e603aec920b346f7f0be32ee7f8037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23e603aec920b346f7f0be32ee7f8037">&#9670;&nbsp;</a></span>endPrimitiveCollect()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::endPrimitiveCollect </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af672b4e105893166dace675ef3647245"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af672b4e105893166dace675ef3647245">&#9670;&nbsp;</a></span>getNormalizedEpsilon()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::getNormalizedEpsilon </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>&#160;</td>
          <td class="paramname"><em>eps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6e8d8d1f0745e260c68f71602d13cef4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e8d8d1f0745e260c68f71602d13cef4">&#9670;&nbsp;</a></span>getPointInWorldCoord()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">Point</a> <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::getPointInWorldCoord </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a60aff792d3d3d3495fcb520b67300e7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60aff792d3d3d3495fcb520b67300e7a">&#9670;&nbsp;</a></span>process()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::process </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>FIXME Pair filtering is the same than 4pcs. Need refactoring. </p>
<p>Compute the distance and two normal angles to ensure working with wrong orientation. We want to verify that the angle between the normals is close to the angle between normals in the base. This can be checked independent of the full rotation angles which are not yet defined by segment matching alone..</p>
<p>Take the smaller normal distance.</p>
<p>Verify appropriate angle between normals and distance.</p>
<p>Verify restriction on the rotation angle, translation and colors.</p>
<p>need cleaning here</p>
<p>Add ordered pair. </p>

</div>
</div>
<a id="aa2c82be20c90ad3b6c0fcd550788b4d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2c82be20c90ad3b6c0fcd550788b4d7">&#9670;&nbsp;</a></span>setBase()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::setBase </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>base_point1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>base_point2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="a04680.xhtml">Point3D</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>base_3D</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a298bea21308326899fccb7ad3bca9257"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a298bea21308326899fccb7ad3bca9257">&#9670;&nbsp;</a></span>setRadius()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::setRadius </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>&#160;</td>
          <td class="paramname"><em>radius</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a49e343e3311777982f046e951a0468ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49e343e3311777982f046e951a0468ed">&#9670;&nbsp;</a></span>synch3DContent()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::synch3DContent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Compute bounding box on fine data to be SURE to have all points in the unit bounding box</p>
<p>add a delta to avoid to have elements with coordinate = 1</p>
<p>update point cloud (worldToUnit use the ratio and gravity center previously computed) Generate primitives </p>

</div>
</div>
<a id="a7cd266ca41bee2a8b8256c892bb0ed79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cd266ca41bee2a8b8256c892bb0ed79">&#9670;&nbsp;</a></span>unitToWorld() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">Point</a> <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::unitToWorld </td>
          <td>(</td>
          <td class="paramtype">const Eigen::MatrixBase&lt; typename <a class="el" href="a04656.xhtml">PairCreationFunctor</a>&lt; _Scalar &gt;::<a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">Point</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="af48eb689681a72289e71f574ffbbda30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af48eb689681a72289e71f574ffbbda30">&#9670;&nbsp;</a></span>unitToWorld() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::unitToWorld </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a>&#160;</td>
          <td class="paramname"><em>d</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab7b64a1c4f9e8e7f3bc76712a9b8934f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7b64a1c4f9e8e7f3bc76712a9b8934f">&#9670;&nbsp;</a></span>ids</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;unsigned int&gt; <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::ids</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aafb5a2cee6e848fe85e759d4bb9fa60f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafb5a2cee6e848fe85e759d4bb9fa60f">&#9670;&nbsp;</a></span>norm_threshold</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04656.xhtml#a0db25f251ac9d4e290ebeb96ad7a12ee">Scalar</a> <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::norm_threshold</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processing data. </p>

</div>
</div>
<a id="ac461661d32d3ad705df37a8fab0c9981"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac461661d32d3ad705df37a8fab0c9981">&#9670;&nbsp;</a></span>options_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04688.xhtml">Match4PCSOptions</a> <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::options_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Shared data. </p>

</div>
</div>
<a id="a71d1504f5173fe021a1e0ebde7448fe6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71d1504f5173fe021a1e0ebde7448fe6">&#9670;&nbsp;</a></span>pair_distance</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::pair_distance</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a39fb0763f1867030bfbe0d59b46bed74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39fb0763f1867030bfbe0d59b46bed74">&#9670;&nbsp;</a></span>pair_distance_epsilon</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::pair_distance_epsilon</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a04ee38e11f9bf4b5835355224b0c71e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04ee38e11f9bf4b5835355224b0c71e0">&#9670;&nbsp;</a></span>pair_normals_angle</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::pair_normals_angle</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a0be8b234a197b45eee821b1591fd5266"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0be8b234a197b45eee821b1591fd5266">&#9670;&nbsp;</a></span>pairs</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a04656.xhtml#a79545f4f997d8e49798c3ff928603012">PairsVector</a>* <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::pairs</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aec4269266c4a42473bbe03aae3008fc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec4269266c4a42473bbe03aae3008fc8">&#9670;&nbsp;</a></span>points</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; typename <a class="el" href="a04656.xhtml#ac4a428d0df3a7227c3600dce6d541b09">PairCreationFunctor::Point</a> &gt; <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::points</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a104e08c3e3a9131519b890227fd8fc9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a104e08c3e3a9131519b890227fd8fc9e">&#9670;&nbsp;</a></span>primitives</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="a04656.xhtml#aea0f143b875c30d3f3aa927b3849df1b">Primitive</a> &gt; <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::primitives</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a35bed28fff4ed3df6f2a358454dd86fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35bed28fff4ed3df6f2a358454dd86fc">&#9670;&nbsp;</a></span>Q_</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt;<a class="el" href="a04680.xhtml">Point3D</a>&gt;&amp; <a class="el" href="a04656.xhtml">GlobalRegistration::PairCreationFunctor</a>&lt; _Scalar &gt;::Q_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="a04027.xhtml">GlobalRegistration</a></li><li class="navelem"><a class="el" href="a04656.xhtml">PairCreationFunctor</a></li>
    <li class="footer">Generated on Tue Sep 19 2017 10:16:06 for Super4PCS Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
