<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Super4PCS Library: GlobalRegistration::KdTree&lt; _Scalar, _Index &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSsymbols.js", "TeX/AMSmath.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Super4PCS Library
   &#160;<span id="projectnumber">V1.1.2(996102d)</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_global_registration.xhtml">GlobalRegistration</a></li><li class="navelem"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="class_global_registration_1_1_kd_tree-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">GlobalRegistration::KdTree&lt; _Scalar, _Index &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for GlobalRegistration::KdTree&lt; _Scalar, _Index &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="class_global_registration_1_1_kd_tree__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for GlobalRegistration::KdTree&lt; _Scalar, _Index &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="class_global_registration_1_1_kd_tree__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_global_registration_1_1_kd_tree_1_1_kd_node.xhtml">KdNode</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_global_registration_1_1_kd_tree_1_1_query_node.xhtml">QueryNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">element of the stack  <a href="struct_global_registration_1_1_kd_tree_1_1_query_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a15cc4782055d17852ee4a3d3e52f2225"><td class="memItemLeft" align="right" valign="top">typedef _Scalar&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a></td></tr>
<tr class="separator:a15cc4782055d17852ee4a3d3e52f2225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede256c88cfcbd6f2d4e60973d50740f"><td class="memItemLeft" align="right" valign="top">typedef _Index&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a></td></tr>
<tr class="separator:aede256c88cfcbd6f2d4e60973d50740f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55ebc1b1fd0c7d1cb1dc4cebe88b17ec"><td class="memItemLeft" align="right" valign="top">typedef Eigen::Matrix&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, 3, 1 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a></td></tr>
<tr class="separator:a55ebc1b1fd0c7d1cb1dc4cebe88b17ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8f32f5f387f05e8462901fe9acc1856"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="namespace_global_registration.xhtml#a07bab1d9061586b1df5876d0d8b57080">AABB3D</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ad8f32f5f387f05e8462901fe9acc1856">AxisAlignedBoxType</a></td></tr>
<tr class="separator:ad8f32f5f387f05e8462901fe9acc1856"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a289fec7ac25b321268b168c49a7787ec"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="struct_global_registration_1_1_kd_tree_1_1_kd_node.xhtml">KdNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a289fec7ac25b321268b168c49a7787ec">NodeList</a></td></tr>
<tr class="separator:a289fec7ac25b321268b168c49a7787ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33de4a6654ae888e59852a211beb24a5"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a></td></tr>
<tr class="separator:a33de4a6654ae888e59852a211beb24a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b39d3d73f0809447ed5888461769a0c"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6b39d3d73f0809447ed5888461769a0c">IndexList</a></td></tr>
<tr class="separator:a6b39d3d73f0809447ed5888461769a0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a383373e8d9684090a9ce76f0fc266fb0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a289fec7ac25b321268b168c49a7787ec">NodeList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a383373e8d9684090a9ce76f0fc266fb0">_getNodes</a> (void)</td></tr>
<tr class="separator:a383373e8d9684090a9ce76f0fc266fb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf29a82d9e666b41d377828823c723e5"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#abf29a82d9e666b41d377828823c723e5">_getPoints</a> (void)</td></tr>
<tr class="separator:abf29a82d9e666b41d377828823c723e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a502e5891dbe70f3e49a3b06cedd074e0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a502e5891dbe70f3e49a3b06cedd074e0">_getIndices</a> (void)</td></tr>
<tr class="separator:a502e5891dbe70f3e49a3b06cedd074e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab92c3a30a5daaafec016701d6a379762"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ab92c3a30a5daaafec016701d6a379762">KdTree</a> (const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a> &amp;points, unsigned int nofPointsPerCell=KD_POINT_PER_CELL, unsigned int maxDepth=KD_MAX_DEPTH)</td></tr>
<tr class="memdesc:ab92c3a30a5daaafec016701d6a379762"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create the Kd-Tree using memory copy.  <a href="#ab92c3a30a5daaafec016701d6a379762">More...</a><br /></td></tr>
<tr class="separator:ab92c3a30a5daaafec016701d6a379762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfc5fd1ad6f25f61ebecffab45d91c66"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#abfc5fd1ad6f25f61ebecffab45d91c66">KdTree</a> (unsigned int size=0, unsigned int nofPointsPerCell=KD_POINT_PER_CELL, unsigned int maxDepth=KD_MAX_DEPTH)</td></tr>
<tr class="memdesc:abfc5fd1ad6f25f61ebecffab45d91c66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a>.  <a href="#abfc5fd1ad6f25f61ebecffab45d91c66">More...</a><br /></td></tr>
<tr class="separator:abfc5fd1ad6f25f61ebecffab45d91c66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81bcdc0c30914894311c78396d3781c7"><td class="memTemplParams" colspan="2">template&lt;class VectorDerived &gt; </td></tr>
<tr class="memitem:a81bcdc0c30914894311c78396d3781c7"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a81bcdc0c30914894311c78396d3781c7">add</a> (const VectorDerived &amp;p)</td></tr>
<tr class="memdesc:a81bcdc0c30914894311c78396d3781c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a new vertex in the <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a>.  <a href="#a81bcdc0c30914894311c78396d3781c7">More...</a><br /></td></tr>
<tr class="separator:a81bcdc0c30914894311c78396d3781c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8614a596a9cb27790a17047c666e33d1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a8614a596a9cb27790a17047c666e33d1">add</a> (<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> *position)</td></tr>
<tr class="separator:a8614a596a9cb27790a17047c666e33d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6841c0418254813b75dd036a9e4e7c2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6841c0418254813b75dd036a9e4e7c2b">finalize</a> ()</td></tr>
<tr class="memdesc:a6841c0418254813b75dd036a9e4e7c2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finalize the creation of the <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a>.  <a href="#a6841c0418254813b75dd036a9e4e7c2b">More...</a><br /></td></tr>
<tr class="separator:a6841c0418254813b75dd036a9e4e7c2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5eb4d24a7dacca7f17e9a9a463d036a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ad8f32f5f387f05e8462901fe9acc1856">AxisAlignedBoxType</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ae5eb4d24a7dacca7f17e9a9a463d036a">aabb</a> () const</td></tr>
<tr class="separator:ae5eb4d24a7dacca7f17e9a9a463d036a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af129c3633570024c075318b8fc709c37"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#af129c3633570024c075318b8fc709c37">~KdTree</a> ()</td></tr>
<tr class="separator:af129c3633570024c075318b8fc709c37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1f84c9bf0e5c82d7835e3ac0b6e438f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#af1f84c9bf0e5c82d7835e3ac0b6e438f">doQueryK</a> (const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;p)</td></tr>
<tr class="separator:af1f84c9bf0e5c82d7835e3ac0b6e438f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ddd4a4fecfc7459d7a27fdbf071746"><td class="memTemplParams" colspan="2">template&lt;typename Container  = std::vector&lt;VectorType&gt;&gt; </td></tr>
<tr class="memitem:a41ddd4a4fecfc7459d7a27fdbf071746"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a41ddd4a4fecfc7459d7a27fdbf071746">doQueryDist</a> (const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;queryPoint, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> sqdist, Container &amp;result)</td></tr>
<tr class="memdesc:a41ddd4a4fecfc7459d7a27fdbf071746"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs distance query and return vector coordinates.  <a href="#a41ddd4a4fecfc7459d7a27fdbf071746">More...</a><br /></td></tr>
<tr class="separator:a41ddd4a4fecfc7459d7a27fdbf071746"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab482559291a93c8fa5d06242fae7cf3e"><td class="memTemplParams" colspan="2">template&lt;typename IndexContainer  = std::vector&lt;Index&gt;&gt; </td></tr>
<tr class="memitem:ab482559291a93c8fa5d06242fae7cf3e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ab482559291a93c8fa5d06242fae7cf3e">doQueryDistIndices</a> (const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;queryPoint, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> sqdist, IndexContainer &amp;result)</td></tr>
<tr class="memdesc:ab482559291a93c8fa5d06242fae7cf3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs distance query and return indices.  <a href="#ab482559291a93c8fa5d06242fae7cf3e">More...</a><br /></td></tr>
<tr class="separator:ab482559291a93c8fa5d06242fae7cf3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6865211d686d440c93e42101d2901a2e"><td class="memTemplParams" colspan="2">template&lt;typename Functor &gt; </td></tr>
<tr class="memitem:a6865211d686d440c93e42101d2901a2e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6865211d686d440c93e42101d2901a2e">doQueryDistProcessIndices</a> (const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;queryPoint, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> sqdist, Functor f)</td></tr>
<tr class="memdesc:a6865211d686d440c93e42101d2901a2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs distance query and return indices.  <a href="#a6865211d686d440c93e42101d2901a2e">More...</a><br /></td></tr>
<tr class="separator:a6865211d686d440c93e42101d2901a2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6cd36f9f91e1e6b444b38b1a986d0c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ad6cd36f9f91e1e6b444b38b1a986d0c1">doQueryRestrictedClosestIndex</a> (const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;queryPoint, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> sqdist, int currentId=-1)</td></tr>
<tr class="memdesc:ad6cd36f9f91e1e6b444b38b1a986d0c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds the closest element index within the range [0:sqrt(sqdist)].  <a href="#ad6cd36f9f91e1e6b444b38b1a986d0c1">More...</a><br /></td></tr>
<tr class="separator:ad6cd36f9f91e1e6b444b38b1a986d0c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9853a9962d8e9bf9d7f59643f2c5f16a"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a9853a9962d8e9bf9d7f59643f2c5f16a">invalidIndex</a> ()</td></tr>
<tr class="separator:a9853a9962d8e9bf9d7f59643f2c5f16a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:abfa7188afe44018b880535fb23200240"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#abfa7188afe44018b880535fb23200240">split</a> (int start, int end, unsigned int dim, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> splitValue)</td></tr>
<tr class="separator:abfa7188afe44018b880535fb23200240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb3dac37494deab64a9bd9cb3288b684"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#adb3dac37494deab64a9bd9cb3288b684">createTree</a> (unsigned int nodeId, unsigned int start, unsigned int end, unsigned int level, unsigned int targetCellsize, unsigned int targetMaxDepth)</td></tr>
<tr class="separator:adb3dac37494deab64a9bd9cb3288b684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f8a24dafb83a98aa4ede46db36d08b"><td class="memTemplParams" colspan="2">template&lt;typename Functor &gt; </td></tr>
<tr class="memitem:a67f8a24dafb83a98aa4ede46db36d08b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a67f8a24dafb83a98aa4ede46db36d08b">_doQueryDistIndicesWithFunctor</a> (const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;queryPoint, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> sqdist, Functor f)</td></tr>
<tr class="memdesc:a67f8a24dafb83a98aa4ede46db36d08b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs distance query and pass the internal id to a functor.  <a href="#a67f8a24dafb83a98aa4ede46db36d08b">More...</a><br /></td></tr>
<tr class="separator:a67f8a24dafb83a98aa4ede46db36d08b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:afe2c008cf6bd412af552689baf2151a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#afe2c008cf6bd412af552689baf2151a7">mPoints</a></td></tr>
<tr class="separator:afe2c008cf6bd412af552689baf2151a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aa8e07607ee3d085407d201b95b1cd7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6b39d3d73f0809447ed5888461769a0c">IndexList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6aa8e07607ee3d085407d201b95b1cd7">mIndices</a></td></tr>
<tr class="separator:a6aa8e07607ee3d085407d201b95b1cd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade0d067edbeca946b1cd51177828e53e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ad8f32f5f387f05e8462901fe9acc1856">AxisAlignedBoxType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ade0d067edbeca946b1cd51177828e53e">mAABB</a></td></tr>
<tr class="separator:ade0d067edbeca946b1cd51177828e53e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab975e8a21a7ab86135a6231f4db60ef3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a289fec7ac25b321268b168c49a7787ec">NodeList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ab975e8a21a7ab86135a6231f4db60ef3">mNodes</a></td></tr>
<tr class="separator:ab975e8a21a7ab86135a6231f4db60ef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a401a700e4ba1c3dc806c65d286ed80bd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_global_registration_1_1_kd_tree_1_1_query_node.xhtml">QueryNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a401a700e4ba1c3dc806c65d286ed80bd">mNodeStack</a> [64]</td></tr>
<tr class="separator:a401a700e4ba1c3dc806c65d286ed80bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a73f2941dd19f6512e33a8efebfb6e0"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a3a73f2941dd19f6512e33a8efebfb6e0">_nofPointsPerCell</a></td></tr>
<tr class="separator:a3a73f2941dd19f6512e33a8efebfb6e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc229663347348999e2c9657277be315"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#adc229663347348999e2c9657277be315">_maxDepth</a></td></tr>
<tr class="separator:adc229663347348999e2c9657277be315"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename _Scalar, typename _Index = int&gt;<br />
class GlobalRegistration::KdTree&lt; _Scalar, _Index &gt;</h3>

<h3>Generation</h3>
<p>You can create the <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a> in two way :</p><ul>
<li>Simple pass construction : easy to use, but use a full vertices memory copy : <div class="fragment"><div class="line">basic::TArray &lt; KdTree&lt;float&gt;::VectorType &gt; data(60);</div><div class="line"><span class="keywordtype">int</span> i = 0;</div><div class="line"></div><div class="line"><span class="keywordflow">for</span> ( ; i != 30; i++ ) {</div><div class="line">    data &lt;&lt; vec3 (rand() % 10 + 1,</div><div class="line">           rand() % 10 + 1,</div><div class="line">           rand() % 10 + 1); <span class="comment">// vertex to add</span></div><div class="line">}</div><div class="line"></div><div class="line">data &lt;&lt; vec3(0.5,0.5,0.5);   <span class="comment">// we must find this vertex</span></div><div class="line">i++;</div><div class="line"></div><div class="line"><span class="keywordflow">for</span> ( ; i != 60; i++ ) {</div><div class="line">    data &lt;&lt; vec3 (rand() % 10 + 1,</div><div class="line">           rand() % 10 + 1,</div><div class="line">           rand() % 10 + 1); <span class="comment">// vertex to add</span></div><div class="line">}</div><div class="line"></div><div class="line">KdTree&lt;float&gt; t ( data ); <span class="comment">// Memory copy</span></div></div><!-- fragment --><ul>
<li>Per-vertex pass construction : more code, but avoid copy : <div class="fragment"><div class="line">KdTree&lt;float&gt; t ( 60 );</div><div class="line"><span class="keywordtype">int</span> i = 0;</div><div class="line"></div><div class="line"><span class="keywordflow">for</span> ( ; i != 30; i++ ) {</div><div class="line">    vec3 v( rand() % 10 + 1,</div><div class="line">            rand() % 10 + 1,</div><div class="line">            rand() % 10 + 1); <span class="comment">// vertex to add</span></div><div class="line">    t.set( i ,v );</div><div class="line">}</div><div class="line"></div><div class="line">t.set(i, vec3(0.5,0.5,0.5));   <span class="comment">// we must find this vertex</span></div><div class="line">i++;</div><div class="line"></div><div class="line"><span class="keywordflow">for</span> ( ; i != 60; i++ ) {</div><div class="line">    vec3 v( rand() % 10 + 1,</div><div class="line">            rand() % 10 + 1,</div><div class="line">            rand() % 10 + 1); <span class="comment">// vertex to add</span></div><div class="line">    t.set( i ,v );</div><div class="line">}</div><div class="line"></div><div class="line">t.finalize();  <span class="comment">// the real creation of the KdTree</span></div></div><!-- fragment --> This version is very usefull if data are computed on the fly.</li>
</ul>
</li>
</ul>
<h3>Closest-Point query</h3>
<p>It is important to note that in the case of multiple neighbors request, the result isn't sorted (see HeapMaxPriorityQueue for more explanations). So if you want to get the closest point, you must perform a single request.</p>
<p>You must specify the size of the request using setMaxNofNeighbors.</p>
<div class="fragment"><div class="line">t.setMaxNofNeighbors(1);</div><div class="line">t.doQueryK( vec3(0,0,0) );</div><div class="line">vec3 result           = t.getNeighbor( 0 ).p;</div><div class="line"><span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> resultId = t.getNeighborId( 0 );</div><div class="line"></div><div class="line">cout &lt;&lt; resultId &lt;&lt; endl;</div><div class="line">cout &lt;&lt; result(0) &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; result(1) &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; result(2) &lt;&lt; endl;</div><div class="line">cout &lt;&lt; t.getNeighborSquaredDistance( 0 ) &lt;&lt; endl;</div></div><!-- fragment --> </div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ad8f32f5f387f05e8462901fe9acc1856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8f32f5f387f05e8462901fe9acc1856">&#9670;&nbsp;</a></span>AxisAlignedBoxType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="namespace_global_registration.xhtml#a07bab1d9061586b1df5876d0d8b57080">AABB3D</a>&lt;<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>&gt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ad8f32f5f387f05e8462901fe9acc1856">AxisAlignedBoxType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="aede256c88cfcbd6f2d4e60973d50740f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aede256c88cfcbd6f2d4e60973d50740f">&#9670;&nbsp;</a></span>Index</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef _Index <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a6b39d3d73f0809447ed5888461769a0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b39d3d73f0809447ed5888461769a0c">&#9670;&nbsp;</a></span>IndexList</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a>&gt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6b39d3d73f0809447ed5888461769a0c">IndexList</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a289fec7ac25b321268b168c49a7787ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a289fec7ac25b321268b168c49a7787ec">&#9670;&nbsp;</a></span>NodeList</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="struct_global_registration_1_1_kd_tree_1_1_kd_node.xhtml">KdNode</a>&gt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a289fec7ac25b321268b168c49a7787ec">NodeList</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a33de4a6654ae888e59852a211beb24a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33de4a6654ae888e59852a211beb24a5">&#9670;&nbsp;</a></span>PointList</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a>&gt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a15cc4782055d17852ee4a3d3e52f2225"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15cc4782055d17852ee4a3d3e52f2225">&#9670;&nbsp;</a></span>Scalar</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef _Scalar <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a55ebc1b1fd0c7d1cb1dc4cebe88b17ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">&#9670;&nbsp;</a></span>VectorType</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">typedef Eigen::Matrix&lt;<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>,3,1&gt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab92c3a30a5daaafec016701d6a379762"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab92c3a30a5daaafec016701d6a379762">&#9670;&nbsp;</a></span>KdTree() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>nofPointsPerCell</em> = <code>KD_POINT_PER_CELL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>maxDepth</em> = <code>KD_MAX_DEPTH</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create the Kd-Tree using memory copy. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#abfc5fd1ad6f25f61ebecffab45d91c66" title="Create a void KdTree. ">KdTree(unsigned int size, unsigned int nofPointsPerCell, unsigned int maxDepth)</a> </dd></dl>

</div>
</div>
<a id="abfc5fd1ad6f25f61ebecffab45d91c66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfc5fd1ad6f25f61ebecffab45d91c66">&#9670;&nbsp;</a></span>KdTree() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::<a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>nofPointsPerCell</em> = <code>KD_POINT_PER_CELL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>maxDepth</em> = <code>KD_MAX_DEPTH</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a>. </p>
<p>Second way to create the <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a>, in two time. You must call <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6841c0418254813b75dd036a9e4e7c2b" title="Finalize the creation of the KdTree. ">finalize()</a> before requesting for closest points.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6841c0418254813b75dd036a9e4e7c2b" title="Finalize the creation of the KdTree. ">finalize()</a> </dd></dl>

</div>
</div>
<a id="af129c3633570024c075318b8fc709c37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af129c3633570024c075318b8fc709c37">&#9670;&nbsp;</a></span>~KdTree()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::~<a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a67f8a24dafb83a98aa4ede46db36d08b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67f8a24dafb83a98aa4ede46db36d08b">&#9670;&nbsp;</a></span>_doQueryDistIndicesWithFunctor()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
<div class="memtemplate">
template&lt;typename Functor &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::_doQueryDistIndicesWithFunctor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;&#160;</td>
          <td class="paramname"><em>queryPoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>&#160;</td>
          <td class="paramname"><em>sqdist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Functor&#160;</td>
          <td class="paramname"><em>f</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs distance query and pass the internal id to a functor. </p>
<dl class="section see"><dt>See also</dt><dd>doQueryRestrictedClosest For more information about the algorithm.</dd></dl>
<p>This function is an alternative to <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#af1f84c9bf0e5c82d7835e3ac0b6e438f">doQueryK(const VectorType&amp; queryPoint)</a> that allow to perform the query by requesting a maximum distance instead of neighborhood size. </p>

</div>
</div>
<a id="a502e5891dbe70f3e49a3b06cedd074e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a502e5891dbe70f3e49a3b06cedd074e0">&#9670;&nbsp;</a></span>_getIndices()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a>&amp; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::_getIndices </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a383373e8d9684090a9ce76f0fc266fb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a383373e8d9684090a9ce76f0fc266fb0">&#9670;&nbsp;</a></span>_getNodes()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a289fec7ac25b321268b168c49a7787ec">NodeList</a>&amp; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::_getNodes </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abf29a82d9e666b41d377828823c723e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf29a82d9e666b41d377828823c723e5">&#9670;&nbsp;</a></span>_getPoints()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a>&amp; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::_getPoints </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae5eb4d24a7dacca7f17e9a9a463d036a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5eb4d24a7dacca7f17e9a9a463d036a">&#9670;&nbsp;</a></span>aabb()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ad8f32f5f387f05e8462901fe9acc1856">AxisAlignedBoxType</a>&amp; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::aabb </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a81bcdc0c30914894311c78396d3781c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81bcdc0c30914894311c78396d3781c7">&#9670;&nbsp;</a></span>add() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<div class="memtemplate">
template&lt;class VectorDerived &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::add </td>
          <td>(</td>
          <td class="paramtype">const VectorDerived &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add a new vertex in the <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a>. </p>

</div>
</div>
<a id="a8614a596a9cb27790a17047c666e33d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8614a596a9cb27790a17047c666e33d1">&#9670;&nbsp;</a></span>add() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a> *&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb3dac37494deab64a9bd9cb3288b684"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb3dac37494deab64a9bd9cb3288b684">&#9670;&nbsp;</a></span>createTree()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::createTree </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>nodeId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>targetCellSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>targetMaxDepth</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Recursively builds the kdtree</p>
<p>The heuristic is the following:</p><ul>
<li>if the number of points in the node is lower than targetCellsize then make a leaf</li>
<li>else compute the <a class="el" href="class_global_registration_1_1_a_a_b_b.xhtml">AABB</a> of the points of the node and split it at the middle of the largest <a class="el" href="class_global_registration_1_1_a_a_b_b.xhtml">AABB</a> dimension.</li>
</ul>
<p>This strategy might look not optimal because it does not explicitly prune empty space, unlike more advanced SAH-like techniques used for RT. On the other hand it leads to a shorter tree, faster to traverse and our experience shown that in the special case of kNN queries, this strategy is indeed more efficient (and much faster to build). Moreover, for volume data (e.g., fluid simulation) pruning the empty space is useless.</p>
<p>Actually, storing at each node the exact <a class="el" href="class_global_registration_1_1_a_a_b_b.xhtml">AABB</a> (we therefore have a binary BVH) allows to prune only about 10% of the leaves, but the overhead of this pruning (ball/ABBB intersection) is more expensive than the gain it provides and the memory consumption is x4 higher ! </p>

</div>
</div>
<a id="a41ddd4a4fecfc7459d7a27fdbf071746"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41ddd4a4fecfc7459d7a27fdbf071746">&#9670;&nbsp;</a></span>doQueryDist()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<div class="memtemplate">
template&lt;typename Container  = std::vector&lt;VectorType&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::doQueryDist </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;&#160;</td>
          <td class="paramname"><em>queryPoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>&#160;</td>
          <td class="paramname"><em>sqdist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Container &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs distance query and return vector coordinates. </p>

</div>
</div>
<a id="ab482559291a93c8fa5d06242fae7cf3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab482559291a93c8fa5d06242fae7cf3e">&#9670;&nbsp;</a></span>doQueryDistIndices()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<div class="memtemplate">
template&lt;typename IndexContainer  = std::vector&lt;Index&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::doQueryDistIndices </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;&#160;</td>
          <td class="paramname"><em>queryPoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>&#160;</td>
          <td class="paramname"><em>sqdist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IndexContainer &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs distance query and return indices. </p>

</div>
</div>
<a id="a6865211d686d440c93e42101d2901a2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6865211d686d440c93e42101d2901a2e">&#9670;&nbsp;</a></span>doQueryDistProcessIndices()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<div class="memtemplate">
template&lt;typename Functor &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::doQueryDistProcessIndices </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;&#160;</td>
          <td class="paramname"><em>queryPoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>&#160;</td>
          <td class="paramname"><em>sqdist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Functor&#160;</td>
          <td class="paramname"><em>f</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs distance query and return indices. </p>

</div>
</div>
<a id="af1f84c9bf0e5c82d7835e3ac0b6e438f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1f84c9bf0e5c82d7835e3ac0b6e438f">&#9670;&nbsp;</a></span>doQueryK()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::doQueryK </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad6cd36f9f91e1e6b444b38b1a986d0c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6cd36f9f91e1e6b444b38b1a986d0c1">&#9670;&nbsp;</a></span>doQueryRestrictedClosestIndex()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::doQueryRestrictedClosestIndex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a55ebc1b1fd0c7d1cb1dc4cebe88b17ec">VectorType</a> &amp;&#160;</td>
          <td class="paramname"><em>queryPoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>&#160;</td>
          <td class="paramname"><em>sqdist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>currentId</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finds the closest element index within the range [0:sqrt(sqdist)]. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">currentId</td><td>Index of the querypoint if it belongs to the tree</td></tr>
  </table>
  </dd>
</dl>
<p>This algorithm uses the simple distance to the split plane to prune nodes. A more elaborated approach consists to track the closest corner of the cell relatively to the current query point. This strategy allows to save about 5% of the leaves. However, in practice the slight overhead due to this tracking reduces the overall performance.</p>
<p>This algorithm also use a simple stack while a priority queue using the squared distances to the cells as a priority values allows to save about 10% of the leaves. But, again, priority queue insertions and deletions are quite involved, and therefore a simple stack is by far much faster.</p>
<p>The optionnal parameter currentId is used when the query point is stored in the tree, and must thus be avoided during the query </p>

</div>
</div>
<a id="a6841c0418254813b75dd036a9e4e7c2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6841c0418254813b75dd036a9e4e7c2b">&#9670;&nbsp;</a></span>finalize()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::finalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finalize the creation of the <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">KdTree</a>. </p>

</div>
</div>
<a id="a9853a9962d8e9bf9d7f59643f2c5f16a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9853a9962d8e9bf9d7f59643f2c5f16a">&#9670;&nbsp;</a></span>invalidIndex()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::invalidIndex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abfa7188afe44018b880535fb23200240"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfa7188afe44018b880535fb23200240">&#9670;&nbsp;</a></span>split()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Scalar , typename Index &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>, <a class="el" href="class_global_registration_1_1_kd_tree.xhtml#aede256c88cfcbd6f2d4e60973d50740f">Index</a> &gt;::split </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>dim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a15cc4782055d17852ee4a3d3e52f2225">Scalar</a>&#160;</td>
          <td class="paramname"><em>splitValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Used to build the tree: split the subset [start..end[ according to dim and splitValue, and returns the index of the first element of the second subset. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="adc229663347348999e2c9657277be315"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc229663347348999e2c9657277be315">&#9670;&nbsp;</a></span>_maxDepth</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::_maxDepth</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a3a73f2941dd19f6512e33a8efebfb6e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a73f2941dd19f6512e33a8efebfb6e0">&#9670;&nbsp;</a></span>_nofPointsPerCell</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::_nofPointsPerCell</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ade0d067edbeca946b1cd51177828e53e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade0d067edbeca946b1cd51177828e53e">&#9670;&nbsp;</a></span>mAABB</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#ad8f32f5f387f05e8462901fe9acc1856">AxisAlignedBoxType</a> <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::mAABB</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a6aa8e07607ee3d085407d201b95b1cd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6aa8e07607ee3d085407d201b95b1cd7">&#9670;&nbsp;</a></span>mIndices</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a6b39d3d73f0809447ed5888461769a0c">IndexList</a> <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::mIndices</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab975e8a21a7ab86135a6231f4db60ef3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab975e8a21a7ab86135a6231f4db60ef3">&#9670;&nbsp;</a></span>mNodes</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a289fec7ac25b321268b168c49a7787ec">NodeList</a> <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::mNodes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a401a700e4ba1c3dc806c65d286ed80bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a401a700e4ba1c3dc806c65d286ed80bd">&#9670;&nbsp;</a></span>mNodeStack</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_global_registration_1_1_kd_tree_1_1_query_node.xhtml">QueryNode</a> <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::mNodeStack[64]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="afe2c008cf6bd412af552689baf2151a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe2c008cf6bd412af552689baf2151a7">&#9670;&nbsp;</a></span>mPoints</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename _Scalar, typename _Index = int&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_global_registration_1_1_kd_tree.xhtml#a33de4a6654ae888e59852a211beb24a5">PointList</a> <a class="el" href="class_global_registration_1_1_kd_tree.xhtml">GlobalRegistration::KdTree</a>&lt; _Scalar, _Index &gt;::mPoints</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Tue Sep 19 2017 09:23:23 for Super4PCS Library by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.13
</small></address>
</body>
</html>
